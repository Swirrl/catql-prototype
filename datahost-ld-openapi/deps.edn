{:paths ["resources" "src"]
 :deps {org.clojure/clojure {:mvn/version "1.11.1"}

        ring/ring-core {:mvn/version "1.7.1"}
        ring/ring-jetty-adapter {:mvn/version "1.7.1"}

        clj-http/clj-http {:mvn/version "3.12.3"}

        integrant/integrant {:mvn/version "0.8.0"}
        meta-merge/meta-merge {:mvn/version "1.0.0"}
        grafter/vocabularies {:mvn/version "0.3.9"}
        io.github.swirrl/grafter.repository {:mvn/version "3.0.0"}

        com.yetanalytics/flint {:mvn/version "0.2.1"
                                :exclusions [org.clojure/clojure
                                             org.clojure/clojurescript]}

        org.clojure/tools.logging {:mvn/version "1.2.4"}
        org.apache.logging.log4j/log4j-api {:mvn/version "2.20.0"} ; Import log4j2 as the logging backend
        org.apache.logging.log4j/log4j-core {:mvn/version "2.20.0"} ; Import log4j2 as the logging backend
        org.apache.logging.log4j/log4j-slf4j-impl {:mvn/version "2.20.0"} ; Redirect all SLF4J logs over the log4j2 backend
        org.apache.logging.log4j/log4j-layout-template-json {:mvn/version "2.20.0"}

        snowball-stemmer/snowball-stemmer {:mvn/version "0.1.1"}}

 :aliases
 {:run {:main-opts ["-m" "tpximpact.datahost.ldapi"]}

  :ldapi/docker {:extra-paths ["env/docker/resources"]
                 :jvm-opts ["-Xmx4g"
                            "-Dcom.sun.management.jmxremote.ssl=false"
                            "-Dcom.sun.management.jmxremote.authenticate=false"
                            "-Dcom.sun.management.jmxremote.port=3007"
                            ;;"-Dlog4j.configuration=log4j2-docker.xml"
                            ;"-Dlog4j2.debug=true"
                            ]

                 :main-opts ["-m" "tpximpact.datahost.ldapi"]}

  :build {:deps {io.github.clojure/tools.build {:git/tag "v0.9.4" :git/sha "76b78fe"}
                 io.github.seancorfield/build-clj {:git/tag "v0.9.2" :git/sha "9c9f078"}

                 io.github.juxt/pack.alpha {:git/sha "802b3d6347376db51093d122eb4b8cf8a7bbd7cf"}
                 com.google.cloud.tools/jib-core {:mvn/version "0.23.0"}
                 }
          :ns-default build}

  :test {:extra-paths ["test" "env/test/resources"]
         :extra-deps {lambdaisland/kaocha {:mvn/version "1.82.1306"}
                      lambdaisland/kaocha-junit-xml {:mvn/version "1.17.101"}}
         :exec-fn kaocha.runner/exec-fn
         :exec-args {:tests [{:id :unit
                              :test-paths ["test"]
                              :source-paths ["src"]}]
                     :plugins [:kaocha.plugin/profiling :kaocha.plugin/junit-xml]
                     :kaocha.plugin.junit-xml/target-file "test-results/kaocha/results.xml"
                     :reporter kaocha.report/documentation
                     }}

  :dev {:extra-paths ["env/dev/src" "env/test/resources" "test"]
        :extra-deps {integrant/repl {:mvn/version "0.3.2"}
                     org.clojure/test.check {:mvn/version "1.1.1"}
                     vvvvalvalval/scope-capture {:mvn/version "0.3.3"}}
        :jvm-opts ["-Dclojure.tools.logging.factory=clojure.tools.logging.impl/log4j2-factory"]}}}
